<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Redis命令行操作[Linux]</title>
    <url>/2022/01/15/Linux/Redis%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%93%8D%E4%BD%9C%5BLinux%5D/</url>
    <content><![CDATA[<p>中文官网<a href="http://www.redis.cn/">http://www.redis.cn</a></p>
<p>英文官网<a href="http://redis.io/">http://redis.io</a></p>
<p>Redis命令参考文档网址：<a href="http://redisdoc.com/">http://redisdoc.com</a></p>
<h2 id="1-Redis命令的小套路"><a href="#1-Redis命令的小套路" class="headerlink" title="1. Redis命令的小套路"></a>1. Redis命令的小套路</h2><ul>
<li>NX：not exist</li>
<li>EX：expire</li>
<li>M：multi</li>
</ul>
<h2 id="2-基本操作"><a href="#2-基本操作" class="headerlink" title="2.基本操作"></a>2.基本操作</h2><h3 id="①切换数据库"><a href="#①切换数据库" class="headerlink" title="①切换数据库"></a>①切换数据库</h3><p>Redis默认有16个数据库。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用select切换数据库</span></span><br><span class="line"><span class="comment"># 数据库索引从0开始</span></span><br><span class="line">127.0.0.1:6379&gt; select 2</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[2]&gt; select 0</span><br><span class="line">OK</span><br></pre></td></tr></table></figure>

<h3 id="②查看数据库长度"><a href="#②查看数据库长度" class="headerlink" title="②查看数据库长度"></a>②查看数据库长度</h3><p>数据库长度就是这个数据库中存储了多少条数据</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> hello hello</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> happy happy-value</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> good good-value</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; dbsize</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br></pre></td></tr></table></figure>

<h3 id="③清空全库"><a href="#③清空全库" class="headerlink" title="③清空全库"></a>③清空全库</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; flushall</span><br></pre></td></tr></table></figure>

<h2 id="3-KEY操作"><a href="#3-KEY操作" class="headerlink" title="3. KEY操作"></a>3. KEY操作</h2><p>在实际操作中对于Key的定义大家注意下面几点：</p>
<ul>
<li>Key不要太长，超过1024字节将消耗过多内存，降低查询效率。尽管Redis支持的Key最大长度为512MB。</li>
<li>Key仍然要做到见名知意。</li>
<li>在同一个项目中遵循同一个命名规范，习惯上多个单词用“:”分开。例如：“user:token:session:id”</li>
<li>Redis命令不区分大小写，Key区分大小写</li>
</ul>
<h3 id="KEYS-PATTERN"><a href="#KEYS-PATTERN" class="headerlink" title="KEYS PATTERN"></a>KEYS PATTERN</h3><p>把匹配PATTERN的key返回</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># PATTERN中可以使用“*”匹配多个字符，使用“?”匹配单个字符</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回数据库中所有的key</span></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">&quot;hello&quot;</span></span><br><span class="line">2) <span class="string">&quot;happy&quot;</span></span><br><span class="line">3) <span class="string">&quot;good&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回数据库中以h开头的key</span></span><br><span class="line">127.0.0.1:6379&gt; keys h*</span><br><span class="line">1) <span class="string">&quot;hello&quot;</span></span><br><span class="line">2) <span class="string">&quot;happy&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回数据库中有字母o的key</span></span><br><span class="line">127.0.0.1:6379&gt; keys *o*</span><br><span class="line">1) <span class="string">&quot;hello&quot;</span></span><br><span class="line">2) <span class="string">&quot;good&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="TYPE-KEY"><a href="#TYPE-KEY" class="headerlink" title="TYPE KEY"></a>TYPE KEY</h3><p>返回KEY对应的值的类型</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">type</span> hello</span><br><span class="line">string</span><br></pre></td></tr></table></figure>

<h3 id="MOVE-KEY-DB"><a href="#MOVE-KEY-DB" class="headerlink" title="MOVE KEY DB"></a>MOVE KEY DB</h3><p>把一组键值对数据移动到另一个数据库中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; move good 2</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure>

<h3 id="DEL-KEY-KEY-…"><a href="#DEL-KEY-KEY-…" class="headerlink" title="DEL KEY [KEY …]"></a>DEL KEY [KEY …]</h3><p>根据KEY进行删除，至少要指定一个KEY</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; del happy</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure>

<h3 id="EXISTS-KEY-KEY-…"><a href="#EXISTS-KEY-KEY-…" class="headerlink" title="EXISTS KEY [KEY …]"></a>EXISTS KEY [KEY …]</h3><p>检查指定的KEY是否存在。指定一个KEY时，存在返回1，不存在返回0。可以指定多个，返回存在的KEY的数量。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; exists good</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; exists fruit-list</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure>

<h3 id="RENAME-KEY-NEWKEY"><a href="#RENAME-KEY-NEWKEY" class="headerlink" title="RENAME KEY NEWKEY"></a>RENAME KEY NEWKEY</h3><p>重命名一个KEY，NEWKEY不管是否是已经存在的都会执行，如果NEWKEY已经存在则会被覆盖。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">&quot;fruit-list&quot;</span></span><br><span class="line">2) <span class="string">&quot;bbb&quot;</span></span><br><span class="line">3) <span class="string">&quot;aaa&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; rename aaa 333</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">&quot;fruit-list&quot;</span></span><br><span class="line">2) <span class="string">&quot;bbb&quot;</span></span><br><span class="line">3) <span class="string">&quot;333&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="RENAMENX-KEY-NEWKEY"><a href="#RENAMENX-KEY-NEWKEY" class="headerlink" title="RENAMENX KEY NEWKEY"></a>RENAMENX KEY NEWKEY</h3><p>只有在NEWKEY不存在时能够执行成功，否则失败</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">&quot;fruit-list&quot;</span></span><br><span class="line">2) <span class="string">&quot;bbb&quot;</span></span><br><span class="line">3) <span class="string">&quot;aaa:444&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; renamenx bbb aaa:444</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br></pre></td></tr></table></figure>

<h3 id="EXPIRE-KEY-SECONDS"><a href="#EXPIRE-KEY-SECONDS" class="headerlink" title="EXPIRE KEY SECONDS"></a>EXPIRE KEY SECONDS</h3><p>给一个KEY设置在SECONDS秒后过期，过期会被Redis移除。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; expire bbb 100</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure>

<h3 id="TTL-KEY"><a href="#TTL-KEY" class="headerlink" title="TTL KEY"></a>TTL KEY</h3><p>以秒为单位查看KEY还能存在多长时间<br>正数：剩余的存活时间（单位：秒）<br>-1：永不过期<br>-2：不存在的Key</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; ttl bbb</span><br><span class="line">(<span class="built_in">integer</span>) 96</span><br></pre></td></tr></table></figure>

<h3 id="PERSIST-KEY"><a href="#PERSIST-KEY" class="headerlink" title="PERSIST KEY"></a>PERSIST KEY</h3><p>移除过期时间，变成永久key</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; persist bbb</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; ttl bbb</span><br><span class="line">(<span class="built_in">integer</span>) -1</span><br></pre></td></tr></table></figure>



<h2 id="4-string操作"><a href="#4-string操作" class="headerlink" title="4. string操作"></a>4. string操作</h2><h3 id="GET-KEY"><a href="#GET-KEY" class="headerlink" title="GET KEY"></a>GET KEY</h3><p>根据key得到值，只能用于string类型。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; get ccc</span><br><span class="line"><span class="string">&quot;111&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SET-KEY-VALUE-EX-SECONDS-PX-MILLISECONDS-NX-XX"><a href="#SET-KEY-VALUE-EX-SECONDS-PX-MILLISECONDS-NX-XX" class="headerlink" title="SET KEY VALUE [EX SECONDS | PX MILLISECONDS] [NX|XX]"></a>SET KEY VALUE [EX SECONDS | PX MILLISECONDS] [NX|XX]</h3><p>给KEY设置一个string类型的值。</p>
<ul>
<li>EX参数用于设置存活的秒数。</li>
<li>PX参数用于设置存活的毫秒数。</li>
<li>NX参数表示当前命令中指定的KEY不存在才行。</li>
<li>XX参数表示当前命令中指定的KEY存在才行。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> ccc 222 xx</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> abc 222 xx</span><br><span class="line">(nil)</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; get ccc</span><br><span class="line"><span class="string">&quot;222&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="APPEND-KEY-VALUE"><a href="#APPEND-KEY-VALUE" class="headerlink" title="APPEND KEY VALUE"></a>APPEND KEY VALUE</h3><p>把指定的value追加到KEY对应的原来的值后面，返回值是<code>追加后的字符串长度</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; get bbb</span><br><span class="line"><span class="string">&quot;333&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; append bbb 123456</span><br><span class="line">(<span class="built_in">integer</span>) 9</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; get bbb</span><br><span class="line"><span class="string">&quot;333123456&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="STRLEN-KEY"><a href="#STRLEN-KEY" class="headerlink" title="STRLEN KEY"></a>STRLEN KEY</h3><p>直接返回字符串长度</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; strlen bbb</span><br><span class="line">(<span class="built_in">integer</span>) 9</span><br></pre></td></tr></table></figure>

<h3 id="INCR-KEY"><a href="#INCR-KEY" class="headerlink" title="INCR KEY"></a>INCR KEY</h3><p>自增1（要求：参与运算的数据必须是整数且不能超过整数Integer范围）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; incr bbb</span><br><span class="line">(<span class="built_in">integer</span>) 333123457</span><br></pre></td></tr></table></figure>

<h3 id="DECR-KEY"><a href="#DECR-KEY" class="headerlink" title="DECR KEY"></a>DECR KEY</h3><p>自减1（要求：参与运算的数据必须是整数且不能超过整数Integer范围）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; decr bbb</span><br><span class="line">(<span class="built_in">integer</span>) 333123456</span><br></pre></td></tr></table></figure>

<h3 id="INCRBY-KEY-INCREMENT"><a href="#INCRBY-KEY-INCREMENT" class="headerlink" title="INCRBY KEY INCREMENT"></a>INCRBY KEY INCREMENT</h3><p>原值+INCREMENT（要求：参与运算的数据必须是整数且不能超过整数Integer范围）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; INCRBY bbb 333654321</span><br><span class="line">(<span class="built_in">integer</span>) 666777777</span><br></pre></td></tr></table></figure>

<h3 id="DECRBY-KEY-DECREMENT"><a href="#DECRBY-KEY-DECREMENT" class="headerlink" title="DECRBY KEY DECREMENT"></a>DECRBY KEY DECREMENT</h3><p>原值-DECREMENT（要求：参与运算的数据必须是整数且不能超过整数Integer范围）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; DECRBY bbb 666777776</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure>

<h3 id="GETRANGE-KEY-START-END"><a href="#GETRANGE-KEY-START-END" class="headerlink" title="GETRANGE KEY START END"></a>GETRANGE KEY START END</h3><p>从字符串中取指定的一段，索引从0开始。START是开始取值的索引<br>，END是结束取值的索引。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> bbb 123456789</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; get bbb</span><br><span class="line"><span class="string">&quot;123456789&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; GETRANGE bbb 3 6</span><br><span class="line"><span class="string">&quot;4567&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SETRANGE-KEY-OFFSET-VALUE"><a href="#SETRANGE-KEY-OFFSET-VALUE" class="headerlink" title="SETRANGE KEY OFFSET VALUE"></a>SETRANGE KEY OFFSET VALUE</h3><p>从offset（从0开始的索引）开始使用VALUE进行替换，包含offset位置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SETRANGE bbb 0 9876 </span><br><span class="line">(<span class="built_in">integer</span>) 9</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; get bbb</span><br><span class="line"><span class="string">&quot;987656789&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SETEX-KEY-SECONDS-VALUE"><a href="#SETEX-KEY-SECONDS-VALUE" class="headerlink" title="SETEX KEY SECONDS VALUE"></a>SETEX KEY SECONDS VALUE</h3><p>设置KEY,VALUE时指定存在秒数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; setex eee 100 eee-value</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; ttl eee</span><br><span class="line">(<span class="built_in">integer</span>) 96</span><br></pre></td></tr></table></figure>

<h3 id="SETNX-KEY-VALUE"><a href="#SETNX-KEY-VALUE" class="headerlink" title="SETNX KEY VALUE"></a>SETNX KEY VALUE</h3><p>新建字符串类型的键值对，且要求key必须是新建的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; setnx ggg ggg-value</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; setnx ggg ggg-value2</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; get ggg</span><br><span class="line"><span class="string">&quot;ggg-value&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="MSET-KEY-VALUE-KEY-VALUE-…"><a href="#MSET-KEY-VALUE-KEY-VALUE-…" class="headerlink" title="MSET KEY VALUE [KEY VALUE …]"></a>MSET KEY VALUE [KEY VALUE …]</h3><p>一次性设置一组多个键值对</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; mset k1 v1 k2 v2 k3 v3</span><br><span class="line">OK</span><br></pre></td></tr></table></figure>

<h3 id="MGET-KEY-KEY-…"><a href="#MGET-KEY-KEY-…" class="headerlink" title="MGET KEY [KEY …]"></a>MGET KEY [KEY …]</h3><p>一次性指定多个KEY，返回它们对应的值，没有值的KEY返回值是(nil)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; mget k1 k2 k3 k4</span><br><span class="line">1) <span class="string">&quot;v1&quot;</span></span><br><span class="line">2) <span class="string">&quot;v2&quot;</span></span><br><span class="line">3) <span class="string">&quot;v3&quot;</span></span><br><span class="line">4) (nil)</span><br></pre></td></tr></table></figure>

<h3 id="MSETNX-KEY-VALUE-KEY-VALUE-…"><a href="#MSETNX-KEY-VALUE-KEY-VALUE-…" class="headerlink" title="MSETNX KEY VALUE [KEY VALUE …]"></a>MSETNX KEY VALUE [KEY VALUE …]</h3><p>一次性新建多个值，key必须是新建</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; MSETNX k3 v33 k4 v44</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; mget k3 k4</span><br><span class="line">1) <span class="string">&quot;v3&quot;</span></span><br><span class="line">2) (nil</span><br></pre></td></tr></table></figure>

<h3 id="GETSET-KEY-VALUE"><a href="#GETSET-KEY-VALUE" class="headerlink" title="GETSET KEY VALUE"></a>GETSET KEY VALUE</h3><p>设置新值，同时能够将旧值返回</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; getset k3 v33</span><br><span class="line"><span class="string">&quot;v3&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; get k3</span><br><span class="line"><span class="string">&quot;v33&quot;</span></span><br></pre></td></tr></table></figure>



<h2 id="5-list操作"><a href="#5-list操作" class="headerlink" title="5.list操作"></a>5.list操作</h2><p>Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。它的底层是双向链表，所以它操作时头尾效率高，中间效率低（额外花费查找插入位置的时间）。</p>
<p>在Redis中list类型是按照插入顺序排序的字符串链表。和数据结构中的普通链表一样，我们可以在其头部(left)和尾部(right)添加新的元素。在插入时，如果该键并不存在，Redis将为该键创建一个新的链表。与此相反，如果链表中所有的元素均被移除，那么该键也将会被从数据库中删除。List中可以包含的最大元素数量是2^32-1个。</p>
<p>list是一个有序可以重复的数据类型。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/redis-list.png"></p>
<h3 id="LPUSH-key-value-value-…"><a href="#LPUSH-key-value-value-…" class="headerlink" title="LPUSH key value [value …]"></a>LPUSH key value [value …]</h3><p>针对key指定的list，从左边放入元素</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; lpush fruit-list apple banana cherry</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br></pre></td></tr></table></figure>

<h3 id="RPUSH-key-value-value-…"><a href="#RPUSH-key-value-value-…" class="headerlink" title="RPUSH key value [value …]"></a>RPUSH key value [value …]</h3><p>针对key指定的list，从右边放入元素</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; rpush fruit-list orange peach</span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br></pre></td></tr></table></figure>

<h3 id="LRANGE-key-start-stop"><a href="#LRANGE-key-start-stop" class="headerlink" title="LRANGE key start stop"></a>LRANGE key start stop</h3><p>根据list集合的索引打印元素数据</p>
<ul>
<li>正着数：0,1,2,3,…</li>
<li>倒着数：-1,-2,-3,…</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; lrange fruit-list 0 -1</span><br><span class="line">1) <span class="string">&quot;cherry&quot;</span></span><br><span class="line">2) <span class="string">&quot;banana&quot;</span></span><br><span class="line">3) <span class="string">&quot;apple&quot;</span></span><br><span class="line">4) <span class="string">&quot;orange&quot;</span></span><br><span class="line">5) <span class="string">&quot;peach&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="LLEN-key"><a href="#LLEN-key" class="headerlink" title="LLEN key"></a>LLEN key</h3><p>​    返回list集合的长度</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; llen fruit-list</span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br></pre></td></tr></table></figure>

<h3 id="LPOP-key"><a href="#LPOP-key" class="headerlink" title="LPOP key"></a>LPOP key</h3><p>​    从左边弹出一个元素。<br>​    弹出=返回+删除。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; lpop fruit-list</span><br><span class="line"><span class="string">&quot;cherry&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="RPOP-key"><a href="#RPOP-key" class="headerlink" title="RPOP key"></a>RPOP key</h3><p>​    从右边弹出一个元素。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; rpop fruit-list</span><br><span class="line"><span class="string">&quot;peach&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="RPOPLPUSH-source-destination"><a href="#RPOPLPUSH-source-destination" class="headerlink" title="RPOPLPUSH source destination"></a>RPOPLPUSH source destination</h3><p>从source中RPOP一个元素，LPUSH到destination中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; lrange fruit-list 0 -1</span><br><span class="line">1) <span class="string">&quot;banana&quot;</span></span><br><span class="line">2) <span class="string">&quot;apple&quot;</span></span><br><span class="line">3) <span class="string">&quot;orange&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; rpoplpush fruit-list target-list</span><br><span class="line"><span class="string">&quot;orange&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; lrange target-list 0 -1</span><br><span class="line">1) <span class="string">&quot;orange&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; lrange fruit-list 0 -1</span><br><span class="line">1) <span class="string">&quot;banana&quot;</span></span><br><span class="line">2) <span class="string">&quot;apple&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="LINDEX-key-index"><a href="#LINDEX-key-index" class="headerlink" title="LINDEX key index"></a>LINDEX key index</h3><p>根据索引从集合中取值</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; lindex fruit-list 0</span><br><span class="line"><span class="string">&quot;banana&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; lindex fruit-list 1</span><br><span class="line"><span class="string">&quot;apple&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; lindex fruit-list 2</span><br><span class="line">(nil)</span><br></pre></td></tr></table></figure>

<h3 id="LINSERT-key-BEFORE-AFTER-pivot-value"><a href="#LINSERT-key-BEFORE-AFTER-pivot-value" class="headerlink" title="LINSERT key BEFORE|AFTER pivot value"></a>LINSERT key BEFORE|AFTER pivot value</h3><p>在pivot指定的值前面或后面插入value，如果pivot值有重复的，那么就从左往右数，以第一个遇到的pivot为基准。BEFORE表示放在pivot前面，AFTER表示放在pivot后面。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; lrange fruit-list 0 -1</span><br><span class="line">1) <span class="string">&quot;apple&quot;</span></span><br><span class="line">2) <span class="string">&quot;cherry&quot;</span></span><br><span class="line">3) <span class="string">&quot;banana&quot;</span></span><br><span class="line">4) <span class="string">&quot;apple&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; linsert fruit-list before apple @@@</span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; lrange fruit-list 0 -1</span><br><span class="line">1) <span class="string">&quot;@@@&quot;</span></span><br><span class="line">2) <span class="string">&quot;apple&quot;</span></span><br><span class="line">3) <span class="string">&quot;cherry&quot;</span></span><br><span class="line">4) <span class="string">&quot;banana&quot;</span></span><br><span class="line">5) <span class="string">&quot;apple&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; linsert fruit-list after apple <span class="comment">###</span></span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; lrange fruit-list 0 -1</span><br><span class="line">1) <span class="string">&quot;@@@&quot;</span></span><br><span class="line">2) <span class="string">&quot;apple&quot;</span></span><br><span class="line">3) <span class="string">&quot;###&quot;</span></span><br><span class="line">4) <span class="string">&quot;cherry&quot;</span></span><br><span class="line">5) <span class="string">&quot;banana&quot;</span></span><br><span class="line">6) <span class="string">&quot;apple&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="LPUSHX-key-value"><a href="#LPUSHX-key-value" class="headerlink" title="LPUSHX key value"></a>LPUSHX key value</h3><p>只能针对存在的list执行LPUSH</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; lpushx uuu xxx</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; lpushx fruit-list new-value</span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; lrange fruit-list 0 -1</span><br><span class="line">1) <span class="string">&quot;new-value&quot;</span></span><br><span class="line">2) <span class="string">&quot;@@@&quot;</span></span><br><span class="line">3) <span class="string">&quot;apple&quot;</span></span><br><span class="line">4) <span class="string">&quot;###&quot;</span></span><br><span class="line">5) <span class="string">&quot;cherry&quot;</span></span><br><span class="line">6) <span class="string">&quot;banana&quot;</span></span><br><span class="line">7) <span class="string">&quot;apple&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="LREM-key-count-value"><a href="#LREM-key-count-value" class="headerlink" title="LREM key count value"></a>LREM key count value</h3><p>根据count指定的数量从key对应的list中删除value<br>具体执行时从左往右删除，遇到一个删一个，删完为止</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; lrem fruit-list 2 apple</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; lrange fruit-list 0 -1</span><br><span class="line">1) <span class="string">&quot;new-value&quot;</span></span><br><span class="line">2) <span class="string">&quot;@@@&quot;</span></span><br><span class="line">3) <span class="string">&quot;###&quot;</span></span><br><span class="line">4) <span class="string">&quot;cherry&quot;</span></span><br><span class="line">5) <span class="string">&quot;banana&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="LSET-key-index-value"><a href="#LSET-key-index-value" class="headerlink" title="LSET key index value"></a>LSET key index value</h3><p>把指定索引位置的元素替换为另一个值</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; lrange fruit-list 0 -1</span><br><span class="line">1) <span class="string">&quot;new-value&quot;</span></span><br><span class="line">2) <span class="string">&quot;@@@&quot;</span></span><br><span class="line">3) <span class="string">&quot;###&quot;</span></span><br><span class="line">4) <span class="string">&quot;cherry&quot;</span></span><br><span class="line">5) <span class="string">&quot;banana&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; lset fruit-list 3 apple</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; lrange fruit-list 0 -1</span><br><span class="line">1) <span class="string">&quot;new-value&quot;</span></span><br><span class="line">2) <span class="string">&quot;@@@&quot;</span></span><br><span class="line">3) <span class="string">&quot;###&quot;</span></span><br><span class="line">4) <span class="string">&quot;apple&quot;</span></span><br><span class="line">5) <span class="string">&quot;banana&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="LTRIM-key-start-stop"><a href="#LTRIM-key-start-stop" class="headerlink" title="LTRIM key start stop"></a>LTRIM key start stop</h3><p>仅保留指定区间的数据，两边的数据被删除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[3]&gt; ltrim fruit-list 1 2</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[3]&gt; lrange fruit-list 0 -1</span><br><span class="line">1) <span class="string">&quot;@@@&quot;</span></span><br><span class="line">2) <span class="string">&quot;###&quot;</span></span><br></pre></td></tr></table></figure>



<h2 id="6-set操作"><a href="#6-set操作" class="headerlink" title="6. set操作"></a>6. set操作</h2><h3 id="SADD-key-member-member-…"><a href="#SADD-key-member-member-…" class="headerlink" title="SADD key member [member …]"></a>SADD key member [member …]</h3><p>给key指定的set集合中存入数据，set会自动去重</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; sadd animal:<span class="built_in">set</span> tiger cat pig cat tiger dog snake fish bear</span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br></pre></td></tr></table></figure>

<h3 id="SMEMBERS-key"><a href="#SMEMBERS-key" class="headerlink" title="SMEMBERS key"></a>SMEMBERS key</h3><p>返回可以指定的set集合中所有的元素</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; smembers animal:<span class="built_in">set</span></span><br><span class="line">1) <span class="string">&quot;pig&quot;</span></span><br><span class="line">2) <span class="string">&quot;cat&quot;</span></span><br><span class="line">3) <span class="string">&quot;tiger&quot;</span></span><br><span class="line">4) <span class="string">&quot;dog&quot;</span></span><br><span class="line">5) <span class="string">&quot;bear&quot;</span></span><br><span class="line">6) <span class="string">&quot;fish&quot;</span></span><br><span class="line">7) <span class="string">&quot;snake&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SCARD-key"><a href="#SCARD-key" class="headerlink" title="SCARD key"></a>SCARD key</h3><p>返回set集合中元素的数量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; scard animal:<span class="built_in">set</span></span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br></pre></td></tr></table></figure>

<h3 id="SISMEMBER-key-member"><a href="#SISMEMBER-key-member" class="headerlink" title="SISMEMBER key member"></a>SISMEMBER key member</h3><p>检查当前指定member是否是set集合中的元素</p>
<ul>
<li>返回1：是</li>
<li>返回0：不是</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; sismember animal:<span class="built_in">set</span> cat</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379[4]&gt; sismember animal:<span class="built_in">set</span> cat888</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br></pre></td></tr></table></figure>

<h3 id="SREM-key-member-member-…"><a href="#SREM-key-member-member-…" class="headerlink" title="SREM key member [member …]"></a>SREM key member [member …]</h3><p>从set集合中删除元素</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; srem animal:<span class="built_in">set</span> aa bb cc snake pig</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; smembers animal:<span class="built_in">set</span></span><br><span class="line">1) <span class="string">&quot;tiger&quot;</span></span><br><span class="line">2) <span class="string">&quot;dog&quot;</span></span><br><span class="line">3) <span class="string">&quot;bear&quot;</span></span><br><span class="line">4) <span class="string">&quot;fish&quot;</span></span><br><span class="line">5) <span class="string">&quot;cat&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SINTER-key-key-…"><a href="#SINTER-key-key-…" class="headerlink" title="SINTER key [key …]"></a>SINTER key [key …]</h3><p>将指定的set集合进行“交集”操作<br>集合A：a,b,c<br>集合B：b,c,d<br>交集：b,c</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; sadd a:<span class="built_in">set</span> 11 22 33 44 55</span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; sadd b:<span class="built_in">set</span> 11 33 55 77 99</span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; sinter a:<span class="built_in">set</span> b:<span class="built_in">set</span></span><br><span class="line">1) <span class="string">&quot;11&quot;</span></span><br><span class="line">2) <span class="string">&quot;33&quot;</span></span><br><span class="line">3) <span class="string">&quot;55&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SINTERSTORE-destination-key-key-…"><a href="#SINTERSTORE-destination-key-key-…" class="headerlink" title="SINTERSTORE destination key [key …]"></a>SINTERSTORE destination key [key …]</h3><p>取交集后存入destination</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; SINTERSTORE c:<span class="built_in">set</span> a:<span class="built_in">set</span> b:<span class="built_in">set</span></span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; SMEMBERS c:<span class="built_in">set</span></span><br><span class="line">1) <span class="string">&quot;11&quot;</span></span><br><span class="line">2) <span class="string">&quot;33&quot;</span></span><br><span class="line">3) <span class="string">&quot;55&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SDIFF-key-key-…"><a href="#SDIFF-key-key-…" class="headerlink" title="SDIFF key [key …]"></a>SDIFF key [key …]</h3><p>将指定的集合执行“差集”操作，结果和运算顺序有关。<br>    集合A：a,b,c<br>    集合B：b,c,d<br>    A对B执行diff：a<br>    相当于：A-交集部分</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># a-交集</span></span><br><span class="line">127.0.0.1:6379[4]&gt; SDIFF a:<span class="built_in">set</span> b:<span class="built_in">set</span></span><br><span class="line">1) <span class="string">&quot;22&quot;</span></span><br><span class="line">2) <span class="string">&quot;44&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># b-交集</span></span><br><span class="line">127.0.0.1:6379[4]&gt; SDIFF b:<span class="built_in">set</span> a:<span class="built_in">set</span></span><br><span class="line">1) <span class="string">&quot;77&quot;</span></span><br><span class="line">2) <span class="string">&quot;99&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SDIFFSTORE-destination-key-key-…"><a href="#SDIFFSTORE-destination-key-key-…" class="headerlink" title="SDIFFSTORE destination key [key …]"></a>SDIFFSTORE destination key [key …]</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; SDIFFSTORE d:<span class="built_in">set</span> a:<span class="built_in">set</span> b:<span class="built_in">set</span></span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; SMEMBERS d:<span class="built_in">set</span></span><br><span class="line">1) <span class="string">&quot;22&quot;</span></span><br><span class="line">2) <span class="string">&quot;44&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SUNION-key-key-…"><a href="#SUNION-key-key-…" class="headerlink" title="SUNION key [key …]"></a>SUNION key [key …]</h3><p>将指定的集合执行“并集”操作<br>    集合A：a,b,c<br>    集合B：b,c,d<br>    并集：a,b,c,d</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; SUNION a:<span class="built_in">set</span> b:<span class="built_in">set</span></span><br><span class="line">1) <span class="string">&quot;11&quot;</span></span><br><span class="line">2) <span class="string">&quot;22&quot;</span></span><br><span class="line">3) <span class="string">&quot;33&quot;</span></span><br><span class="line">4) <span class="string">&quot;44&quot;</span></span><br><span class="line">5) <span class="string">&quot;55&quot;</span></span><br><span class="line">6) <span class="string">&quot;77&quot;</span></span><br><span class="line">7) <span class="string">&quot;99&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SUNIONSTORE-destination-key-key-…"><a href="#SUNIONSTORE-destination-key-key-…" class="headerlink" title="SUNIONSTORE destination key [key …]"></a>SUNIONSTORE destination key [key …]</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; SMEMBERS e:<span class="built_in">set</span></span><br><span class="line">1) <span class="string">&quot;11&quot;</span></span><br><span class="line">2) <span class="string">&quot;22&quot;</span></span><br><span class="line">3) <span class="string">&quot;33&quot;</span></span><br><span class="line">4) <span class="string">&quot;44&quot;</span></span><br><span class="line">5) <span class="string">&quot;55&quot;</span></span><br><span class="line">6) <span class="string">&quot;77&quot;</span></span><br><span class="line">7) <span class="string">&quot;99&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SMOVE-source-destination-member"><a href="#SMOVE-source-destination-member" class="headerlink" title="SMOVE source destination member"></a>SMOVE source destination member</h3><p>把member从source移动到destination</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; SMOVE animal:<span class="built_in">set</span> a:<span class="built_in">set</span> cat</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; SMEMBERS a:<span class="built_in">set</span></span><br><span class="line">1) <span class="string">&quot;22&quot;</span></span><br><span class="line">2) <span class="string">&quot;44&quot;</span></span><br><span class="line">3) <span class="string">&quot;55&quot;</span></span><br><span class="line">4) <span class="string">&quot;cat&quot;</span></span><br><span class="line">5) <span class="string">&quot;33&quot;</span></span><br><span class="line">6) <span class="string">&quot;11&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SSCAN-key-cursor-MATCH-pattern-COUNT-count"><a href="#SSCAN-key-cursor-MATCH-pattern-COUNT-count" class="headerlink" title="SSCAN key cursor [MATCH pattern] [COUNT count]"></a>SSCAN key cursor [MATCH pattern] [COUNT count]</h3><p>基于游标的遍历。cursor是游标值，第一次显示第一块内容时，游标取值为0；根据后续返回的新的游标值获取下一块数据。直到游标值变成0，说明数据遍历完成。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; SADD testset a b c d e f g h i j k l m n o p q r s t u v w x y z aa bb cc dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz</span><br><span class="line">(<span class="built_in">integer</span>) 52</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; sscan testset 0</span><br><span class="line">1) <span class="string">&quot;36&quot;</span></span><br><span class="line">2)  1) <span class="string">&quot;yy&quot;</span></span><br><span class="line">    2) <span class="string">&quot;s&quot;</span></span><br><span class="line">    3) <span class="string">&quot;i&quot;</span></span><br><span class="line">    4) <span class="string">&quot;aa&quot;</span></span><br><span class="line">    5) <span class="string">&quot;ff&quot;</span></span><br><span class="line">    6) <span class="string">&quot;b&quot;</span></span><br><span class="line">    7) <span class="string">&quot;bb&quot;</span></span><br><span class="line">    8) <span class="string">&quot;h&quot;</span></span><br><span class="line">    9) <span class="string">&quot;gg&quot;</span></span><br><span class="line">   10) <span class="string">&quot;f&quot;</span></span><br><span class="line">   </span><br><span class="line">127.0.0.1:6379[4]&gt; sscan testset 36</span><br><span class="line">1) <span class="string">&quot;2&quot;</span></span><br><span class="line">2)  1) <span class="string">&quot;r&quot;</span></span><br><span class="line">    2) <span class="string">&quot;j&quot;</span></span><br><span class="line">    3) <span class="string">&quot;v&quot;</span></span><br><span class="line">    4) <span class="string">&quot;kk&quot;</span></span><br><span class="line">    5) <span class="string">&quot;q&quot;</span></span><br><span class="line">    6) <span class="string">&quot;t&quot;</span></span><br><span class="line">    7) <span class="string">&quot;w&quot;</span></span><br><span class="line">    8) <span class="string">&quot;z&quot;</span></span><br><span class="line">    9) <span class="string">&quot;dd&quot;</span></span><br><span class="line">   10) <span class="string">&quot;u&quot;</span></span><br><span class="line">   11) <span class="string">&quot;ll&quot;</span></span><br><span class="line">   </span><br><span class="line">127.0.0.1:6379[4]&gt; sscan testset 2</span><br><span class="line">1) <span class="string">&quot;25&quot;</span></span><br><span class="line">2)  1) <span class="string">&quot;cc&quot;</span></span><br><span class="line">    2) <span class="string">&quot;pp&quot;</span></span><br><span class="line">    3) <span class="string">&quot;zz&quot;</span></span><br><span class="line">    4) <span class="string">&quot;c&quot;</span></span><br><span class="line">    5) <span class="string">&quot;x&quot;</span></span><br><span class="line">    6) <span class="string">&quot;tt&quot;</span></span><br><span class="line">    7) <span class="string">&quot;l&quot;</span></span><br><span class="line">    8) <span class="string">&quot;ii&quot;</span></span><br><span class="line">    9) <span class="string">&quot;oo&quot;</span></span><br><span class="line">   10) <span class="string">&quot;ww&quot;</span></span><br><span class="line">   </span><br><span class="line">127.0.0.1:6379[4]&gt; sscan testset 25</span><br><span class="line">1) <span class="string">&quot;29&quot;</span></span><br><span class="line">2)  1) <span class="string">&quot;qq&quot;</span></span><br><span class="line">    2) <span class="string">&quot;mm&quot;</span></span><br><span class="line">    3) <span class="string">&quot;a&quot;</span></span><br><span class="line">    4) <span class="string">&quot;ee&quot;</span></span><br><span class="line">    5) <span class="string">&quot;vv&quot;</span></span><br><span class="line">    6) <span class="string">&quot;n&quot;</span></span><br><span class="line">    7) <span class="string">&quot;p&quot;</span></span><br><span class="line">    8) <span class="string">&quot;nn&quot;</span></span><br><span class="line">    9) <span class="string">&quot;g&quot;</span></span><br><span class="line">   10) <span class="string">&quot;k&quot;</span></span><br><span class="line">   </span><br><span class="line">127.0.0.1:6379[4]&gt; sscan testset 29</span><br><span class="line">1) <span class="string">&quot;63&quot;</span></span><br><span class="line">2)  1) <span class="string">&quot;jj&quot;</span></span><br><span class="line">    2) <span class="string">&quot;y&quot;</span></span><br><span class="line">    3) <span class="string">&quot;ss&quot;</span></span><br><span class="line">    4) <span class="string">&quot;m&quot;</span></span><br><span class="line">    5) <span class="string">&quot;d&quot;</span></span><br><span class="line">    6) <span class="string">&quot;xx&quot;</span></span><br><span class="line">    7) <span class="string">&quot;uu&quot;</span></span><br><span class="line">    8) <span class="string">&quot;e&quot;</span></span><br><span class="line">    9) <span class="string">&quot;rr&quot;</span></span><br><span class="line">   10) <span class="string">&quot;o&quot;</span></span><br><span class="line">   </span><br><span class="line">127.0.0.1:6379[4]&gt; sscan testset 63</span><br><span class="line">1) <span class="string">&quot;0&quot;</span></span><br><span class="line">2) 1) <span class="string">&quot;hh&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SRANDMEMBER-key-count"><a href="#SRANDMEMBER-key-count" class="headerlink" title="SRANDMEMBER key [count]"></a>SRANDMEMBER key [count]</h3><p>从集合中随机返回count个数量的元素，count不指定就返回1个（数据有可能重复出现）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; SRANDMEMBER testset</span><br><span class="line"><span class="string">&quot;y&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; SRANDMEMBER testset 10</span><br><span class="line"> 1) <span class="string">&quot;pp&quot;</span></span><br><span class="line"> 2) <span class="string">&quot;cc&quot;</span></span><br><span class="line"> 3) <span class="string">&quot;d&quot;</span></span><br><span class="line"> 4) <span class="string">&quot;f&quot;</span></span><br><span class="line"> 5) <span class="string">&quot;r&quot;</span></span><br><span class="line"> 6) <span class="string">&quot;ee&quot;</span></span><br><span class="line"> 7) <span class="string">&quot;rr&quot;</span></span><br><span class="line"> 8) <span class="string">&quot;ll&quot;</span></span><br><span class="line"> 9) <span class="string">&quot;t&quot;</span></span><br><span class="line">10) <span class="string">&quot;g&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="SPOP-key-count"><a href="#SPOP-key-count" class="headerlink" title="SPOP key [count]"></a>SPOP key [count]</h3><p>从set集合中随机弹出count个数量的元素，count不指定就弹出1个（保证不会有重复数据出现），因为弹出后就会从set集合中删除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; spop testset</span><br><span class="line"><span class="string">&quot;aa&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; spop testset 10</span><br><span class="line"> 1) <span class="string">&quot;l&quot;</span></span><br><span class="line"> 2) <span class="string">&quot;r&quot;</span></span><br><span class="line"> 3) <span class="string">&quot;rr&quot;</span></span><br><span class="line"> 4) <span class="string">&quot;b&quot;</span></span><br><span class="line"> 5) <span class="string">&quot;zz&quot;</span></span><br><span class="line"> 6) <span class="string">&quot;pp&quot;</span></span><br><span class="line"> 7) <span class="string">&quot;z&quot;</span></span><br><span class="line"> 8) <span class="string">&quot;x&quot;</span></span><br><span class="line"> 9) <span class="string">&quot;v&quot;</span></span><br><span class="line">10) <span class="string">&quot;ll&quot;</span></span><br></pre></td></tr></table></figure>



<h2 id="7-hash操作"><a href="#7-hash操作" class="headerlink" title="7.hash操作"></a>7.hash操作</h2><p>本身就是一个键值对集合。可以当做Java中的Map&lt;String,String&gt;对待。每一个hash可以存储2^32-1个键值对。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/hash.png"></p>
<h3 id="HSET-key-field-value"><a href="#HSET-key-field-value" class="headerlink" title="HSET key field value"></a>HSET key field value</h3><p>插入新数据返回1，修改旧数据返回0。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; HSET teacher:<span class="built_in">hash</span> id 001</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; HSET teacher:<span class="built_in">hash</span> id 002</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br></pre></td></tr></table></figure>

<h3 id="HGETALL-key"><a href="#HGETALL-key" class="headerlink" title="HGETALL key"></a>HGETALL key</h3><p>返回某个key的所有的key和value</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; HSET teacher:<span class="built_in">hash</span> name kangkang</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; HGETALL teacher:<span class="built_in">hash</span></span><br><span class="line">1) <span class="string">&quot;id&quot;</span></span><br><span class="line">2) <span class="string">&quot;002&quot;</span></span><br><span class="line">3) <span class="string">&quot;name&quot;</span></span><br><span class="line">4) <span class="string">&quot;kangkang&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="HGET-key-field"><a href="#HGET-key-field" class="headerlink" title="HGET key field"></a>HGET key field</h3><p>返回指定的key的value中的某个key的value</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; HGET teacher:<span class="built_in">hash</span> id</span><br><span class="line"><span class="string">&quot;002&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="HMSET-key-field-value-field-value-…"><a href="#HMSET-key-field-value-field-value-…" class="headerlink" title="HMSET key field value [field value …]"></a>HMSET key field value [field value …]</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; HMSET teacher:<span class="built_in">hash</span> age 30 subject math salary 7000</span><br><span class="line">OK</span><br></pre></td></tr></table></figure>

<h3 id="HMGET-key-field-field-…"><a href="#HMGET-key-field-field-…" class="headerlink" title="HMGET key field [field …]"></a>HMGET key field [field …]</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; HMGET teacher:<span class="built_in">hash</span> id name age subject salary</span><br><span class="line">1) <span class="string">&quot;002&quot;</span></span><br><span class="line">2) <span class="string">&quot;kangkang&quot;</span></span><br><span class="line">3) <span class="string">&quot;30&quot;</span></span><br><span class="line">4) <span class="string">&quot;math&quot;</span></span><br><span class="line">5) <span class="string">&quot;7000&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="HLEN-key"><a href="#HLEN-key" class="headerlink" title="HLEN key"></a>HLEN key</h3><p>返回value的长度</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; HLEN teacher:<span class="built_in">hash</span></span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br></pre></td></tr></table></figure>

<h3 id="HKEYS-key"><a href="#HKEYS-key" class="headerlink" title="HKEYS key"></a>HKEYS key</h3><p>返回key的value中的所有的key</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; HKEYS teacher:<span class="built_in">hash</span></span><br><span class="line">1) <span class="string">&quot;id&quot;</span></span><br><span class="line">2) <span class="string">&quot;name&quot;</span></span><br><span class="line">3) <span class="string">&quot;age&quot;</span></span><br><span class="line">4) <span class="string">&quot;subject&quot;</span></span><br><span class="line">5) <span class="string">&quot;salary&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="HVALS-key"><a href="#HVALS-key" class="headerlink" title="HVALS key"></a>HVALS key</h3><p>返回key的value中的所有的value</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; HVALS teacher:<span class="built_in">hash</span></span><br><span class="line">1) <span class="string">&quot;002&quot;</span></span><br><span class="line">2) <span class="string">&quot;kangkang&quot;</span></span><br><span class="line">3) <span class="string">&quot;30&quot;</span></span><br><span class="line">4) <span class="string">&quot;math&quot;</span></span><br><span class="line">5) <span class="string">&quot;7000&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="HEXISTS-key-field"><a href="#HEXISTS-key-field" class="headerlink" title="HEXISTS key field"></a>HEXISTS key field</h3><p>是否存在某个key，返回1表示存在，返回0表示不存在。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; HEXISTS teacher:<span class="built_in">hash</span> name</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; HEXISTS teacher:<span class="built_in">hash</span> birthday</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br></pre></td></tr></table></figure>

<h3 id="HDEL-key-field-field-…"><a href="#HDEL-key-field-field-…" class="headerlink" title="HDEL key field [field …]"></a>HDEL key field [field …]</h3><p>删除某个key，返回1表示删除成功，返回0表示删除失败</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; HDEL teacher:<span class="built_in">hash</span> subject</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; HDEL teacher:<span class="built_in">hash</span> birthday</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br></pre></td></tr></table></figure>

<h3 id="HINCRBY-key-field-increment"><a href="#HINCRBY-key-field-increment" class="headerlink" title="HINCRBY key field increment"></a>HINCRBY key field increment</h3><p>给filed的值增加指定的数量 hash&lt;key, value=(filed&lt;key, value&gt;)&gt;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; HINCRBY teacher:<span class="built_in">hash</span> salary 1000</span><br><span class="line">(<span class="built_in">integer</span>) 8000</span><br></pre></td></tr></table></figure>

<h3 id="HSETNX-key-field-value"><a href="#HSETNX-key-field-value" class="headerlink" title="HSETNX key field value"></a>HSETNX key field value</h3><p>要求field是新建的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[4]&gt; HSETNX teacher:<span class="built_in">hash</span> name amy</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[4]&gt; HGET teacher:<span class="built_in">hash</span> name</span><br><span class="line"><span class="string">&quot;kangkang&quot;</span></span><br></pre></td></tr></table></figure>



<h2 id="8-zset操作"><a href="#8-zset操作" class="headerlink" title="8.zset操作"></a>8.zset操作</h2><p>Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。zset的成员是唯一的,但分数(score)却可以重复。</p>
<p>Sorted set. </p>
<p>zset&lt;key, member&lt;name, score&gt;</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/zset.png"></p>
<h3 id="ZADD-key-NX-XX-CH-INCR-score-member-score-member-…"><a href="#ZADD-key-NX-XX-CH-INCR-score-member-score-member-…" class="headerlink" title="ZADD key [NX|XX] [CH] [INCR] score member [score member …]"></a>ZADD key [NX|XX] [CH] [INCR] score member [score member …]</h3><p>添加数据</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[5]&gt; ZADD exam:score 93 amy 83 tom 73 anna 63 mary 53 tony 43 sam</span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br></pre></td></tr></table></figure>

<h3 id="ZRANGE-key-start-stop-WITHSCORES"><a href="#ZRANGE-key-start-stop-WITHSCORES" class="headerlink" title="ZRANGE key start stop [WITHSCORES]"></a>ZRANGE key start stop [WITHSCORES]</h3><p>升序，遍历数据</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[5]&gt; ZRANGE exam:score 0 -1</span><br><span class="line">1) <span class="string">&quot;sam&quot;</span></span><br><span class="line">2) <span class="string">&quot;tony&quot;</span></span><br><span class="line">3) <span class="string">&quot;mary&quot;</span></span><br><span class="line">4) <span class="string">&quot;anna&quot;</span></span><br><span class="line">5) <span class="string">&quot;tom&quot;</span></span><br><span class="line">6) <span class="string">&quot;amy&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[5]&gt; ZRANGE exam:score 0 -1 withscores</span><br><span class="line"> 1) <span class="string">&quot;sam&quot;</span></span><br><span class="line"> 2) <span class="string">&quot;43&quot;</span></span><br><span class="line"> 3) <span class="string">&quot;tony&quot;</span></span><br><span class="line"> 4) <span class="string">&quot;53&quot;</span></span><br><span class="line"> 5) <span class="string">&quot;mary&quot;</span></span><br><span class="line"> 6) <span class="string">&quot;63&quot;</span></span><br><span class="line"> 7) <span class="string">&quot;anna&quot;</span></span><br><span class="line"> 8) <span class="string">&quot;73&quot;</span></span><br><span class="line"> 9) <span class="string">&quot;tom&quot;</span></span><br><span class="line">10) <span class="string">&quot;83&quot;</span></span><br><span class="line">11) <span class="string">&quot;amy&quot;</span></span><br><span class="line">12) <span class="string">&quot;93&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="ZCARD-key"><a href="#ZCARD-key" class="headerlink" title="ZCARD key"></a>ZCARD key</h3><p>返回长度</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[5]&gt; ZCARD exam:score</span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br></pre></td></tr></table></figure>

<h3 id="ZSCORE-key-member"><a href="#ZSCORE-key-member" class="headerlink" title="ZSCORE key member"></a>ZSCORE key member</h3><p>返回某个member的score</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[5]&gt; ZSCORE exam:score sam</span><br><span class="line"><span class="string">&quot;43&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="ZINCRBY-key-increment-member"><a href="#ZINCRBY-key-increment-member" class="headerlink" title="ZINCRBY key increment member"></a>ZINCRBY key increment member</h3><p>给某个member的score增加指定的分数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[5]&gt; ZINCRBY exam:score 5 sam</span><br><span class="line"><span class="string">&quot;48&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="ZRANGEBYSCORE-key-min-max-WITHSCORES-LIMIT-offset-count"><a href="#ZRANGEBYSCORE-key-min-max-WITHSCORES-LIMIT-offset-count" class="headerlink" title="ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count]"></a>ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count]</h3><p>​    在分数的指定区间内返回数据<br>​    min参数可以通过 -inf 表示负无穷<br>​    max参数可以通过 +inf 表示正无穷</p>
<p>默认是闭区间<br>可以通过 (min (max 形式指定开区间，例如：(50 (80</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[5]&gt; ZRANGEBYSCORE exam:score -inf +inf WITHSCORES</span><br><span class="line"> 1) <span class="string">&quot;sam&quot;</span></span><br><span class="line"> 2) <span class="string">&quot;43&quot;</span></span><br><span class="line"> 3) <span class="string">&quot;tony&quot;</span></span><br><span class="line"> 4) <span class="string">&quot;53&quot;</span></span><br><span class="line"> 5) <span class="string">&quot;mary&quot;</span></span><br><span class="line"> 6) <span class="string">&quot;63&quot;</span></span><br><span class="line"> 7) <span class="string">&quot;anna&quot;</span></span><br><span class="line"> 8) <span class="string">&quot;73&quot;</span></span><br><span class="line"> 9) <span class="string">&quot;tom&quot;</span></span><br><span class="line">10) <span class="string">&quot;83&quot;</span></span><br><span class="line">11) <span class="string">&quot;amy&quot;</span></span><br><span class="line">12) <span class="string">&quot;93&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="ZRANK-key-member"><a href="#ZRANK-key-member" class="headerlink" title="ZRANK key member"></a>ZRANK key member</h3><p>先对分数进行升序排序，返回member的排名。排名从0开始</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 升序</span></span><br><span class="line">127.0.0.1:6379[5]&gt; ZRANGE exam:score 0 -1 withscores</span><br><span class="line"> 1) <span class="string">&quot;sam&quot;</span></span><br><span class="line"> 2) <span class="string">&quot;48&quot;</span></span><br><span class="line"> 3) <span class="string">&quot;tony&quot;</span></span><br><span class="line"> 4) <span class="string">&quot;53&quot;</span></span><br><span class="line"> 5) <span class="string">&quot;mary&quot;</span></span><br><span class="line"> 6) <span class="string">&quot;63&quot;</span></span><br><span class="line"> 7) <span class="string">&quot;anna&quot;</span></span><br><span class="line"> 8) <span class="string">&quot;73&quot;</span></span><br><span class="line"> 9) <span class="string">&quot;tom&quot;</span></span><br><span class="line">10) <span class="string">&quot;83&quot;</span></span><br><span class="line">11) <span class="string">&quot;amy&quot;</span></span><br><span class="line">12) <span class="string">&quot;93&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379[5]&gt; ZRANK exam:score sam</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="ZREM-key-member-member-…"><a href="#ZREM-key-member-member-…" class="headerlink" title="ZREM key member [member …]"></a>ZREM key member [member …]</h3><p>delete member(s)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[5]&gt; ZREM exam:score amy</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379[5]&gt; ZRANGE exam:score 0 -1 withscores</span><br><span class="line"> 1) <span class="string">&quot;sam&quot;</span></span><br><span class="line"> 2) <span class="string">&quot;48&quot;</span></span><br><span class="line"> 3) <span class="string">&quot;tony&quot;</span></span><br><span class="line"> 4) <span class="string">&quot;53&quot;</span></span><br><span class="line"> 5) <span class="string">&quot;mary&quot;</span></span><br><span class="line"> 6) <span class="string">&quot;63&quot;</span></span><br><span class="line"> 7) <span class="string">&quot;anna&quot;</span></span><br><span class="line"> 8) <span class="string">&quot;73&quot;</span></span><br><span class="line"> 9) <span class="string">&quot;tom&quot;</span></span><br><span class="line">10) <span class="string">&quot;83&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="ZRANGE-key-start-stop-WITHSCORES-1"><a href="#ZRANGE-key-start-stop-WITHSCORES-1" class="headerlink" title="ZRANGE key start stop [WITHSCORES]"></a>ZRANGE key start stop [WITHSCORES]</h3><p>降序排序，返回所有的members</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[5]&gt; ZREVRANGE exam:score 0 -1 WITHSCORES</span><br><span class="line"> 1) <span class="string">&quot;tom&quot;</span></span><br><span class="line"> 2) <span class="string">&quot;83&quot;</span></span><br><span class="line"> 3) <span class="string">&quot;anna&quot;</span></span><br><span class="line"> 4) <span class="string">&quot;73&quot;</span></span><br><span class="line"> 5) <span class="string">&quot;mary&quot;</span></span><br><span class="line"> 6) <span class="string">&quot;63&quot;</span></span><br><span class="line"> 7) <span class="string">&quot;tony&quot;</span></span><br><span class="line"> 8) <span class="string">&quot;53&quot;</span></span><br><span class="line"> 9) <span class="string">&quot;sam&quot;</span></span><br><span class="line">10) <span class="string">&quot;48&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="ZREVRANK-key-member"><a href="#ZREVRANK-key-member" class="headerlink" title="ZREVRANK key member"></a>ZREVRANK key member</h3><p>先对分数进行降序排序，返回member的排名。排名从0开始</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379[5]&gt; ZREVRANK exam:score sam</span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br></pre></td></tr></table></figure>



<h2 id="9-Geospatial"><a href="#9-Geospatial" class="headerlink" title="9. Geospatial"></a>9. Geospatial</h2><p>查询经纬度数据：<a href="http://www.jsons.cn/lngcode">http://www.jsons.cn/lngcode</a></p>
<h3 id="①添加地理位置"><a href="#①添加地理位置" class="headerlink" title="①添加地理位置"></a>①添加地理位置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GEOADD key longitude latitude member [longitude latitude member ...]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>规则：</p>
<p>1.两极无法直接添加，一般会下载城市数据，直接通过 Java 程序一次性导入。</p>
<p>2.取值范围</p>
<p>​    有效的经度从 -180 度到 180 度。</p>
<p>​    有效的纬度从 -85.05112878 度到 85.05112878 度。</p>
<p>​    当坐标位置超出指定范围时，该命令将会返回一个错误。</p>
<p>3.已经添加的数据，是无法再次往里面添加的。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">192.168.109.100:6379&gt; GEOADD &quot;china:city&quot; 114.085947 22.547 shenzhen</span><br><span class="line">(integer) 1</span><br><span class="line">192.168.109.100:6379&gt; GEOADD &quot;china:city&quot; 113.280637 23.125178 guangzhou</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure>



<h3 id="②查询已添加的地理位置"><a href="#②查询已添加的地理位置" class="headerlink" title="②查询已添加的地理位置"></a>②查询已添加的地理位置</h3><p>Geo类型在Redis内部其实是使用zset类型存储的，所以可以使用zset的命令进行常规操作。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.109.100:6379&gt; ZRANGE china:city 0 -1 </span><br><span class="line">1) &quot;shenzhen&quot;</span><br><span class="line">2) &quot;guangzhou&quot;</span><br><span class="line">192.168.109.100:6379&gt; ZRANGE china:city 0 -1 WITHSCORES</span><br><span class="line">1) &quot;shenzhen&quot;</span><br><span class="line">2) &quot;4046433733682118&quot;</span><br><span class="line">3) &quot;guangzhou&quot;</span><br><span class="line">4) &quot;4046533764066819&quot;</span><br></pre></td></tr></table></figure>



<h3 id="③删除已添加的地理位置"><a href="#③删除已添加的地理位置" class="headerlink" title="③删除已添加的地理位置"></a>③删除已添加的地理位置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.109.100:6379&gt; ZREM china:city guangzhou</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure>



<h3 id="④获取指定地区的坐标值"><a href="#④获取指定地区的坐标值" class="headerlink" title="④获取指定地区的坐标值"></a>④获取指定地区的坐标值</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.109.100:6379&gt; GEOPOS china:city shenzhen</span><br><span class="line">1) 1) &quot;114.08594459295272827&quot;</span><br><span class="line">   2) &quot;22.54699993773966327&quot;</span><br></pre></td></tr></table></figure>



<h3 id="⑤计算两地之间的直线距离"><a href="#⑤计算两地之间的直线距离" class="headerlink" title="⑤计算两地之间的直线距离"></a>⑤计算两地之间的直线距离</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.109.100:6379&gt; GEODIST china:city guangzhou shenzhen km</span><br><span class="line">&quot;104.6426&quot;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>单位：</p>
<p>m 表示单位为米[默认值]。</p>
<p>km 表示单位为千米。</p>
<p>mi 表示单位为英里。</p>
<p>ft 表示单位为英尺。</p>
<p>如果用户没有显式地指定单位参数， 那么 GEODIST 默认使用米作为单位。</p>
</blockquote>
<h3 id="⑥以给定坐标为中心，在指定半径内查找元素"><a href="#⑥以给定坐标为中心，在指定半径内查找元素" class="headerlink" title="⑥以给定坐标为中心，在指定半径内查找元素"></a>⑥以给定坐标为中心，在指定半径内查找元素</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.109.100:6379&gt; GEORADIUS china:city 110 20 1000 km WITHCOORD WITHDIST</span><br><span class="line">1) 1) &quot;shenzhen&quot;</span><br><span class="line">   2) &quot;509.4622&quot;</span><br><span class="line">   3) 1) &quot;114.08594459295272827&quot;</span><br><span class="line">      2) &quot;22.54699993773966327&quot;</span><br><span class="line">2) 1) &quot;guangzhou&quot;</span><br><span class="line">   2) &quot;485.7406&quot;</span><br><span class="line">   3) 1) &quot;113.28063815832138062&quot;</span><br><span class="line">      2) &quot;23.12517743834835215&quot;</span><br></pre></td></tr></table></figure>

<p>WITHCOORD表示显示经纬度<br/></p>
<p>WITHDIST表示显示到中心的距离</p>
<h3 id="⑦在指定元素周围查找其他元素"><a href="#⑦在指定元素周围查找其他元素" class="headerlink" title="⑦在指定元素周围查找其他元素"></a>⑦在指定元素周围查找其他元素</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.109.100:6379&gt; GEORADIUSBYMEMBER china:city shenzhen 300 km WITHCOORD WITHDIST</span><br><span class="line">1) 1) &quot;shenzhen&quot;</span><br><span class="line">   2) &quot;0.0000&quot;</span><br><span class="line">   3) 1) &quot;114.08594459295272827&quot;</span><br><span class="line">      2) &quot;22.54699993773966327&quot;</span><br><span class="line">2) 1) &quot;guangzhou&quot;</span><br><span class="line">   2) &quot;104.6426&quot;</span><br><span class="line">   3) 1) &quot;113.28063815832138062&quot;</span><br><span class="line">      2) &quot;23.12517743834835215&quot;</span><br></pre></td></tr></table></figure>



<h2 id="10-hyperloglogs"><a href="#10-hyperloglogs" class="headerlink" title="10. hyperloglogs"></a>10. hyperloglogs</h2><h3 id="①基数概念"><a href="#①基数概念" class="headerlink" title="①基数概念"></a>①基数概念</h3><p>一个集合中不重复元素的个数。例如：集合{1,2,5,1,7,2,5}中元素个数是7，但是基数是4。而hyperloglogs的主要功能就是进行基数统计。</p>
<h3 id="②hyperloglogs命令"><a href="#②hyperloglogs命令" class="headerlink" title="②hyperloglogs命令"></a>②hyperloglogs命令</h3><h4 id="1-添加"><a href="#1-添加" class="headerlink" title="[1]添加"></a>[1]添加</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.109.100:6379&gt; PFADD user:access:1 tom jerry andy jim andy jerry tom</span><br><span class="line">(integer) 1</span><br><span class="line">192.168.109.100:6379&gt; PFADD user:access:2 andy jerry tom bob kate</span><br><span class="line">(integer) 1</span><br><span class="line">192.168.109.100:6379&gt; PFADD user:access:3 mary harry tom jerry</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure>

<h4 id="2-统计"><a href="#2-统计" class="headerlink" title="[2]统计"></a>[2]统计</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.109.100:6379&gt; PFCOUNT user:access:1 user:access:2 user:access:3</span><br><span class="line">(integer) 8</span><br></pre></td></tr></table></figure>

<h4 id="3-合并"><a href="#3-合并" class="headerlink" title="[3]合并"></a>[3]合并</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.109.100:6379&gt; PFMERGE user:access:merge user:access:1 user:access:2 user:access:3</span><br><span class="line">OK</span><br><span class="line">192.168.109.100:6379&gt; PFCOUNT user:access:merge</span><br><span class="line">(integer) 8</span><br></pre></td></tr></table></figure>

<h2 id="11-bitmap位图"><a href="#11-bitmap位图" class="headerlink" title="11.bitmap位图"></a>11.bitmap位图</h2><p>直接对数据的二进制位进行操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.109.100:6379[5]&gt; set a hello</span><br><span class="line">OK</span><br><span class="line">192.168.109.100:6379[5]&gt; GETBIT a 0</span><br><span class="line">(integer) 0</span><br><span class="line">192.168.109.100:6379[5]&gt; GETBIT a 1</span><br><span class="line">(integer) 1</span><br><span class="line">192.168.109.100:6379[5]&gt; GETBIT a 2</span><br><span class="line">(integer) 1</span><br><span class="line">192.168.109.100:6379[5]&gt; GETBIT a 3</span><br><span class="line">(integer) 0</span><br><span class="line">192.168.109.100:6379[5]&gt; GETBIT a 4</span><br><span class="line">(integer) 1</span><br><span class="line">192.168.109.100:6379[5]&gt; GETBIT a 5</span><br><span class="line">(integer) 0</span><br><span class="line">192.168.109.100:6379[5]&gt; SETBIT a 5 1</span><br><span class="line">(integer) 0</span><br><span class="line">192.168.109.100:6379[5]&gt; get a</span><br><span class="line">&quot;lello&quot;</span><br><span class="line">192.168.109.100:6379[5]&gt; BITCOUNT a</span><br><span class="line">(integer) 22</span><br></pre></td></tr></table></figure>

<p>setbit设置指定比特位<br/><br>getbit获取指定比特位<br/><br>bitcount统计所有比特位中1的数量</p>
<h2 id="常用数据类型应用场景"><a href="#常用数据类型应用场景" class="headerlink" title="常用数据类型应用场景"></a>常用数据类型应用场景</h2><table>
<thead>
<tr>
<th>数据类型</th>
<th>应用场景</th>
</tr>
</thead>
<tbody><tr>
<td>string</td>
<td>分布式Session存储<br />分布式数据库ID<br />计数器：统计网站访问量</td>
</tr>
<tr>
<td>hash</td>
<td>存储对象信息（购物车中的商品信息）<br />存储表的信息</td>
</tr>
<tr>
<td>list</td>
<td>实现队列、栈操作<br />汇总日志<br />粉丝列表<br />关注的人列表</td>
</tr>
<tr>
<td>set</td>
<td>签到<br />打卡<br />点赞</td>
</tr>
<tr>
<td>zset</td>
<td>排行榜<br />百度热点搜索</td>
</tr>
<tr>
<td>geospatial</td>
<td>获取地理位置信息<br />两地之间的距离</td>
</tr>
<tr>
<td>hyperloglogs</td>
<td>基数统计</td>
</tr>
<tr>
<td>bitmaps</td>
<td>统计用户访问次数</td>
</tr>
</tbody></table>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      <categories>
        <category>JavaLearning</category>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>macOS在虚拟机Linux-CentOS7-64上安装Mysql8[rpm]</title>
    <url>/2022/01/14/Linux/macOS%E5%9C%A8%E8%99%9A%E6%8B%9F%E6%9C%BALinux-CentOS7-64%E4%B8%8A%E5%AE%89%E8%A3%85Mysql8%5Brpm%5D/</url>
    <content><![CDATA[<h2 id="1-下载rpm安装包"><a href="#1-下载rpm安装包" class="headerlink" title="1. 下载rpm安装包"></a>1. 下载rpm安装包</h2><p>去<a href="https://downloads.mysql.com/archives/community/">官网</a>下载rpm安装包，共四个。</p>
<p>mysql-community-libs-8.0.18-1.el7.x86_64.rpm</p>
<h2 id="2-将安装包上传到Linux的-opt"><a href="#2-将安装包上传到Linux的-opt" class="headerlink" title="2. 将安装包上传到Linux的/opt"></a>2. 将安装包上传到Linux的/opt</h2><p>详情请参考[Mac与Linux文件传输]</p>
<h2 id="3-卸载系统预装-mariadb"><a href="#3-卸载系统预装-mariadb" class="headerlink" title="3. 卸载系统预装 mariadb"></a>3. 卸载系统预装 mariadb</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpm -e --nodeps mariadb-libs-1:5.5.56-2.el7.x86_64</span><br></pre></td></tr></table></figure>

<h2 id="3-按照以下顺序安装"><a href="#3-按照以下顺序安装" class="headerlink" title="3.按照以下顺序安装"></a>3.按照以下顺序安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpm -ivh /opt/mysql-community-common-8.0.18-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">rpm -ivh /opt/mysql-community-libs-8.0.18-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">rpm -ivh /opt/mysql-community-client-8.0.18-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">rpm -ivh /opt/mysql-community-server-8.0.18-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果已经打开了opt文件夹，安装时可以省略文件夹，例如</p>
<p>rpm -ivh mysql-community-common-8.0.18-1.el7.x86_64.rpm</p>
</blockquote>
<h2 id="4-查看mysql是否安装成功"><a href="#4-查看mysql是否安装成功" class="headerlink" title="4. 查看mysql是否安装成功"></a>4. 查看mysql是否安装成功</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">id mysql</span><br><span class="line"><span class="meta">#</span><span class="bash"> uid=27(mysql) gid=27(mysql) groups=27(mysql)</span></span><br></pre></td></tr></table></figure>

<h2 id="5-初始化-mysql"><a href="#5-初始化-mysql" class="headerlink" title="5. 初始化 mysql"></a>5. 初始化 mysql</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建数据文件目录和mysql系统数据库 产生随机root密码</span></span><br><span class="line">mysqld --initialize </span><br></pre></td></tr></table></figure>

<h2 id="6-目录权限授权"><a href="#6-目录权限授权" class="headerlink" title="6. 目录权限授权"></a>6. 目录权限授权</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chown mysql:mysql /var/lib/mysql -R;</span><br></pre></td></tr></table></figure>

<h2 id="7-启动-mysql-服务"><a href="#7-启动-mysql-服务" class="headerlink" title="7. 启动 mysql 服务"></a>7. 启动 mysql 服务</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start mysqld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看mysql服务是否启动</span></span><br><span class="line">systemctl status mysqld.service</span><br><span class="line"></span><br><span class="line">ps -ef | grep mysql | grep -v grep</span><br><span class="line"><span class="comment"># mysql      4921      1  4 23:27 ?        00:00:01 /usr/sbin/mysqld</span></span><br></pre></td></tr></table></figure>

<h2 id="8-查看初始化随机生成的-root-密码"><a href="#8-查看初始化随机生成的-root-密码" class="headerlink" title="8. 查看初始化随机生成的 root 密码"></a>8. 查看初始化随机生成的 root 密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /var/<span class="built_in">log</span>/mysqld.log | grep password</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2022-01-14T15:19:09.444302Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: RI6&lt;px3asiqw</span></span><br><span class="line"><span class="comment"># RI6&lt;px3asiqw 就是初始密码</span></span><br></pre></td></tr></table></figure>

<h2 id="9-登录并修改密码"><a href="#9-登录并修改密码" class="headerlink" title="9. 登录并修改密码"></a>9. 登录并修改密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line"><span class="comment"># 粘贴初始密码</span></span><br><span class="line"></span><br><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;自己想要设置的密码&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line"><span class="comment"># ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123456&#x27;;</span></span><br></pre></td></tr></table></figure>

<h2 id="10-远程访问授权"><a href="#10-远程访问授权" class="headerlink" title="10. 远程访问授权"></a>10. 远程访问授权</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">create user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified with mysql_native_password by <span class="string">&#x27;mysql登录密码&#x27;</span>;</span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line"><span class="comment"># create user &#x27;root&#x27;@&#x27;%&#x27; identified with mysql_native_password by &#x27;123456&#x27;;</span></span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> with grant option;</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<h2 id="11-在Mac上的软件上登录mysql"><a href="#11-在Mac上的软件上登录mysql" class="headerlink" title="11. 在Mac上的软件上登录mysql"></a>11. 在Mac上的软件上登录mysql</h2><h2 id="12-设置-停止开机自启"><a href="#12-设置-停止开机自启" class="headerlink" title="12. 设置/停止开机自启"></a>12. 设置/停止开机自启</h2><p>需退出mysql设置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> mysqld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">systemctl <span class="built_in">disable</span> mysqld.service</span><br></pre></td></tr></table></figure>

<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      <categories>
        <category>JavaLearning</category>
        <category>Linux</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>macOS</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS使用VMware虚拟机安装Linux系统CentOS7-64</title>
    <url>/2022/01/11/Linux/macOS%E4%BD%BF%E7%94%A8VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85Linux%E7%B3%BB%E7%BB%9FCentOS7-64/</url>
    <content><![CDATA[<blockquote>
<p>MacOS 10.14      VMware Pro 11.5.6     CentOS-7-x86_64-DVD-1804.iso</p>
</blockquote>
<h1 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h1><p>下载完 CentOS，装好 VMware 后就可以开始安装了。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-001.png"></p>
<p>点击蓝色框</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-002.png"></p>
<p>将下载好的 iso 文件拖进框内</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-003.png"></p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-004.png"></p>
<p>取消 Use Easy Install</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-005.png"></p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-006.png"></p>
<p>这些配置后续都可以修改，这里直接完成即可。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-007.png"></p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-008.png"></p>
<p>按键盘上下键控制，选择 Install CentOS 7，回车</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-009.png"></p>
<p>安装中</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-010.png"></p>
<h1 id="二、初始化"><a href="#二、初始化" class="headerlink" title="二、初始化"></a>二、初始化</h1><h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h2><p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-011.png"></p>
<h2 id="安装方式"><a href="#安装方式" class="headerlink" title="安装方式"></a>安装方式</h2><p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-012.png"></p>
<p>初学者，所以选择了 GNOME Desktop。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-013.png"></p>
<h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-014.png"></p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-015.png"></p>
<p>将 LVM 改成 Standard Partition，然后点击加号</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-016.png"></p>
<p>注意这里是 mib</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-017.png"></p>
<p>将File System 修改为 ext4</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-018.png"></p>
<p>继续点加号，不需要修改</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-019.png"></p>
<p>继续点加号</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-020.png"></p>
<p>将File System 修改为 ext4</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-021.png"></p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-022.png"></p>
<h2 id="kdump"><a href="#kdump" class="headerlink" title="kdump"></a>kdump</h2><p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-023.png"></p>
<p>取消 Enable kdump，暂时用不到</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-024.png"></p>
<h2 id="网络设置"><a href="#网络设置" class="headerlink" title="网络设置"></a>网络设置</h2><p>点击上面的扳手，选择 NAT 连接方式。</p>
<p>接着点击 NETWORK &amp; HOST NAME</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-025.png"></p>
<p>打开 Mac 的 Terminal，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig vmnet8</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/rayywei/blog-image/raw/master/ifconfig.png"></p>
<p>Address: x.x.x.100</p>
<p>Netmask: 255.255.255.0</p>
<p>Gateway&amp; DNS: x.x.x.2</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-026-2.png"></p>
<p>注意这里右上角要切成 ON</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-028.png"></p>
<h2 id="root账户"><a href="#root账户" class="headerlink" title="root账户"></a>root账户</h2><p>完成之后，点击安装，然后设置 root 密码</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-029.png"></p>
<h2 id="完成安装"><a href="#完成安装" class="headerlink" title="完成安装"></a>完成安装</h2><p>点击重启</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-030.png"></p>
<p>点进去接受协议，然后点右下角 </p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-031.png"></p>
<h2 id="偏好设置"><a href="#偏好设置" class="headerlink" title="偏好设置"></a>偏好设置</h2><p>需要搞一个普通用户，地区选择上海即可。完成后进入桌面，关闭演示。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-032.png"></p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-033.png"></p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-034.png"></p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-035.png"></p>
<h2 id="切换-root-用户"><a href="#切换-root-用户" class="headerlink" title="切换 root 用户"></a>切换 root 用户</h2><p>点击右上角的关机键，退出普通用户。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-036.png"></p>
<p>点击 Not listed，然后输入用户名 root 和之前设置的 root 密码。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/Linux-installation-038.png"></p>
<p>参考教程：</p>
<p><a href="https://juejin.cn/post/6844903985652957198">Mac OS Fusion Linux虚拟机网络设置</a></p>
<p><a href="https://blog.csdn.net/AthlenaA/article/details/99699502">Mac安装VMware fusion 11安装Linux CentOS 7</a></p>
]]></content>
      <categories>
        <category>JavaLearning</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>VMware</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS在虚拟机Linux-CentOS7-64上安装redis8[yum install]</title>
    <url>/2022/01/15/Linux/macOS%E5%9C%A8%E8%99%9A%E6%8B%9F%E6%9C%BALinux-CentOS7-64%E4%B8%8A%E5%AE%89%E8%A3%85redis8%5Byum%20install%5D/</url>
    <content><![CDATA[<h2 id="1-下载redis安装包并解压"><a href="#1-下载redis安装包并解压" class="headerlink" title="1. 下载redis安装包并解压"></a>1. 下载redis安装包并解压</h2><p>打开Terminal，连接Linux，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line"></span><br><span class="line">wget https://download.redis.io/releases/redis-6.2.6.tar.gz</span><br><span class="line"><span class="comment"># 若没有 wget ，可以输入 yum install wget 安装</span></span><br><span class="line"></span><br><span class="line">tar -zxvf redis-6.2.6.tar.gz </span><br></pre></td></tr></table></figure>

<h2 id="2-安装C语言编译环境"><a href="#2-安装C语言编译环境" class="headerlink" title="2. 安装C语言编译环境"></a>2. 安装C语言编译环境</h2><p>建议先拍快照</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum install -y gcc-c++</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看安装是否成功</span></span><br><span class="line">gcc -v</span><br><span class="line"><span class="comment"># 出现版本号就是成功了</span></span><br><span class="line"><span class="comment"># gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) </span></span><br></pre></td></tr></table></figure>

<h2 id="3-修改安装位置"><a href="#3-修改安装位置" class="headerlink" title="3. 修改安装位置"></a>3. 修改安装位置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> redis-6.2.6</span><br><span class="line">cat Makefile</span><br><span class="line"><span class="comment"># Top level makefile, the real shit is at src/Makefile</span></span><br><span class="line"><span class="comment"># 可以得出真正的安装配置文件在 src/Makefile</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> src/</span><br><span class="line"><span class="comment"># 备份文件</span></span><br><span class="line">cp Makefile Makefile.backup</span><br><span class="line"></span><br><span class="line">vim Makefile</span><br><span class="line"><span class="comment"># 键入 /PREFIX 搜索</span></span><br><span class="line"><span class="comment"># 将 PREFIX?=/usr/local 修改为 PREFIX?=/usr/local/redis</span></span><br><span class="line"><span class="comment"># 键入 :wq 保存退出</span></span><br></pre></td></tr></table></figure>

<h2 id="4-编译安装"><a href="#4-编译安装" class="headerlink" title="4. 编译安装"></a>4. 编译安装</h2><p>建议先拍快照</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编译</span></span><br><span class="line">make</span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<h2 id="5-修改redis配置文件"><a href="#5-修改redis配置文件" class="headerlink" title="5. 修改redis配置文件"></a>5. 修改redis配置文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /opt/redis-6.2.6/redis.conf /usr/<span class="built_in">local</span>/redis/</span><br><span class="line"></span><br><span class="line">mkdir /var/logs</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis/</span><br><span class="line"></span><br><span class="line">vim redis.conf</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>配置项名称</th>
<th>作用</th>
<th>取值</th>
</tr>
</thead>
<tbody><tr>
<td>daemonize</td>
<td>控制是否以守护进程形式运行Redis服务器</td>
<td>yes</td>
</tr>
<tr>
<td>logfile</td>
<td>指定日志文件位置</td>
<td>“/var/logs/redis.log”</td>
</tr>
<tr>
<td>dir</td>
<td>Redis工作目录</td>
<td>/usr/local/redis</td>
</tr>
</tbody></table>
<h2 id="6-启动redis"><a href="#6-启动redis" class="headerlink" title="6. 启动redis"></a>6. 启动redis</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># redis-server文件路径 redis.conf文件路径</span></span><br><span class="line">/usr/<span class="built_in">local</span>/redis/bin/redis-server /usr/<span class="built_in">local</span>/redis/redis.conf</span><br></pre></td></tr></table></figure>

<p>查看redis是否启动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看进程</span></span><br><span class="line">ps -ef | grep redis | grep -v grep</span><br><span class="line"><span class="comment"># root      12889      1  0 10:48 ?        00:00:00 /usr/local/redis/bin/redis-server 127.0.0.1:6379</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">less /var/logs/redis.log</span><br><span class="line"><span class="comment"># Configuration loaded</span></span><br><span class="line"><span class="comment"># Ready to accept connections</span></span><br><span class="line"><span class="comment"># 键入 q 退出</span></span><br></pre></td></tr></table></figure>

<h2 id="7-客户端登录"><a href="#7-客户端登录" class="headerlink" title="7. 客户端登录"></a>7. 客户端登录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/redis/bin/redis-cli</span><br><span class="line"><span class="comment"># 此时应出现 127.0.0.1:6379&gt; </span></span><br><span class="line">ping</span><br><span class="line"><span class="comment"># 如果出现 PONG，说明已经成功</span></span><br></pre></td></tr></table></figure>

<h2 id="8-退出客户端"><a href="#8-退出客户端" class="headerlink" title="8. 退出客户端"></a>8. 退出客户端</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>

<h2 id="9-关闭redis"><a href="#9-关闭redis" class="headerlink" title="9. 关闭redis"></a>9. 关闭redis</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/redis/bin/redis-cli shutdown</span><br></pre></td></tr></table></figure>

<h2 id="10-无法连接到redis-cli"><a href="#10-无法连接到redis-cli" class="headerlink" title="10. 无法连接到redis-cli"></a>10. 无法连接到redis-cli</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Could not connect to Redis at 127.0.0.1:6379: Connection refused</span><br></pre></td></tr></table></figure>

<p>登录时需要带上-h和主机地址</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/local/redis/bin/redis-cli -h 172.16.139.100</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JavaLearning</category>
        <category>Linux</category>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>macOS</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2022/01/17/Mac/macOS%20Homebrew%20%E5%AE%98%E6%96%B9%E5%AE%89%E8%A3%85%20%E8%A7%A3%E5%86%B3Failed%20to%20connect%20443/</url>
    <content><![CDATA[<h1 id="macOS-Homebrew-官方安装-解决Failed-to-connect-443"><a href="#macOS-Homebrew-官方安装-解决Failed-to-connect-443" class="headerlink" title="macOS Homebrew 官方安装 解决Failed to connect 443"></a>macOS Homebrew 官方安装 解决Failed to connect 443</h1><blockquote>
<p>macOS Mojave </p>
</blockquote>
<h2 id="1-检查网络"><a href="#1-检查网络" class="headerlink" title="1. 检查网络"></a>1. 检查网络</h2><p>尝试在浏览器中打开下面的网页。</p>
<p>https//raw.githubusercontent.com/Homebrew/install/master/install</p>
<p>如果能打开，说明网络没有问题。如果不能打开，说明网络有问题，需要使用VPN或者修改hosts文件。</p>
<blockquote>
<p>修改hosts文件可以参考：<a href="https://zhuanlan.zhihu.com/p/137025155">MAC OS-X homebrew安装报错：Failed to connect 443</a></p>
</blockquote>
<h2 id="2-检查环境"><a href="#2-检查环境" class="headerlink" title="2. 检查环境"></a>2. 检查环境</h2><p>卸载 command line tools</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo rm -rf /Library/Developer/CommandLineTools</span><br></pre></td></tr></table></figure>

<p>安装 command line tools</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo xcode-select --install</span><br></pre></td></tr></table></figure>

<p>在跳出来的选项框中直接选择<code>install</code>即可。</p>
<p>重试安装homebrew</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>网上有很多安装成功的案例，但是我这里依旧报错443。</p>
<p>于是在网上搜索，解决办法如下：</p>
<p>打开<a href="https://brew.sh/">homebrew主页</a>安装命令里的网址：<a href="https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh">https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh</a></p>
<p>右键另存为<code>install.sh</code>脚本文件，然后在终端输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/bash path-to/install.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">/bin/bash ~/Desktop/install.sh</span><br></pre></td></tr></table></figure>

<p>然后输入开机密码，就开始安装了，但是因为是直接访问国外的资源，哪怕挂了VPN也很慢。</p>
<p>参考教程：</p>
<p><a href="https://zhuanlan.zhihu.com/p/137025155">MAC OS-X homebrew安装报错：Failed to connect 443</a></p>
<p><a href="https://apple.stackexchange.com/questions/419621/latest-command-line-tools-available-for-macos-mojave">latest command line tools available for macos mojave?</a></p>
<p><a href="https://www.codenong.com/cs106599190/">Mac平台 Brew 安装的坎坷之路 – 解决 port 443 错误</a></p>
<p><a href="https://stackoverflow.com/a/61284722/17952492">Homebrew installation on Mac OS X Failed to connect to raw.githubusercontent.com port 443</a></p>
]]></content>
  </entry>
  <entry>
    <title>在MacOS上使用Linux虚拟机的相关经验</title>
    <url>/2022/01/14/Mac/%E5%9C%A8MacOS%E4%B8%8A%E4%BD%BF%E7%94%A8Linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%9B%B8%E5%85%B3%E7%BB%8F%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="在Mac上远程登录Linux"><a href="#在Mac上远程登录Linux" class="headerlink" title="在Mac上远程登录Linux"></a>在Mac上远程登录Linux</h1><p>因为Mac有ssh，所以直接打开Terminal，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># x.x.x.x 为Linux的IP地址</span></span><br><span class="line">ssh root@x.x.x.x</span><br></pre></td></tr></table></figure>



<h1 id="Mac与Linux文件传输-Terminal"><a href="#Mac与Linux文件传输-Terminal" class="headerlink" title="Mac与Linux文件传输[Terminal]"></a>Mac与Linux文件传输[Terminal]</h1><p>网上有客户端可以使用，这里介绍一下使用命令行传输</p>
<h2 id="1-Mac-上传文件到-Linux-服务器"><a href="#1-Mac-上传文件到-Linux-服务器" class="headerlink" title="1. Mac 上传文件到 Linux 服务器"></a>1. Mac 上传文件到 Linux 服务器</h2><p>语法：</p>
<p>scp 文件的绝对路径 <code>Linux用户名</code>@<code>Linux服务器ip</code>:<code>Linux目标绝对路径</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp /Users/***/Downloads/mysql-community-server-8.0.18-1.el7.x86_64.rpm root@172.16.139.100:/opt</span><br></pre></td></tr></table></figure>



<h3 id="2-Mac-上传文件夹到-Linux-服务器"><a href="#2-Mac-上传文件夹到-Linux-服务器" class="headerlink" title="2. Mac 上传文件夹到 Linux 服务器"></a>2. Mac 上传文件夹到 Linux 服务器</h3><blockquote>
<p>语法：</p>
<p>scp -r 文件夹目录 用户名@服务器ip:目标路径</p>
</blockquote>
<h3 id="3-Linux-服务器下载文件到-Mac"><a href="#3-Linux-服务器下载文件到-Mac" class="headerlink" title="3. Linux 服务器下载文件到 Mac"></a>3. Linux 服务器下载文件到 Mac</h3><blockquote>
<p>语法：</p>
<p>scp 用户名@服务器ip:文件路径 目标路径</p>
</blockquote>
<h3 id="4-Linux-服务器下载文件夹到-Mac"><a href="#4-Linux-服务器下载文件夹到-Mac" class="headerlink" title="4. Linux 服务器下载文件夹到 Mac"></a>4. Linux 服务器下载文件夹到 Mac</h3><blockquote>
<p>语法：</p>
<p>scp -r 用户名@服务器ip:文件路径 目标路径</p>
</blockquote>
<h1 id="配置JDK相关环境变量"><a href="#配置JDK相关环境变量" class="headerlink" title="配置JDK相关环境变量"></a>配置JDK相关环境变量</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 声明 JAVA_HOME 环境变量</span></span><br><span class="line">JAVA_HOME=/opt/jdk1.8.0_121</span><br><span class="line"><span class="comment"># 给 PATH 环境变量 附加 $JAVA_HOME/bin 部分</span></span><br><span class="line"><span class="comment"># $PATH 表示引用 PATH 环境变量以前的旧值</span></span><br><span class="line"><span class="comment"># 使用英文冒号连接</span></span><br><span class="line"><span class="comment"># $JAVA_HOME 表示对 JAVA_HOME 变量的引用</span></span><br><span class="line"><span class="comment"># $JAVA_HOME/bin 表示指向可执行文件</span></span><br><span class="line">PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发布</span></span><br><span class="line"><span class="comment"># 发布是发布变量名，不是引用变r量的值，所以前面不写 $ 符号</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME PATH</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>《丁香医生人体调查组》书摘</title>
    <url>/2022/01/04/%E4%B9%A6%E6%91%98/%E3%80%8A%E4%B8%81%E9%A6%99%E5%8C%BB%E7%94%9F%E4%BA%BA%E4%BD%93%E8%B0%83%E6%9F%A5%E7%BB%84%E3%80%8B%E4%B9%A6%E6%91%98/</url>
    <content><![CDATA[<h1 id="肩膀"><a href="#肩膀" class="headerlink" title="肩膀"></a>肩膀</h1><h2 id="诱因"><a href="#诱因" class="headerlink" title="诱因"></a>诱因</h2><p>你以为你没耸，实际从生理结构、肌肉动作来说，你都在耸。</p>
<p>举个例子：办公的时候，工位过高、椅子过低，肩膀会耸。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/excerpt-2022-01-001.jpg"></p>
<p>趴着刷剧的时候，身体放松，肩膀会耸。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/excerpt-2022-01-002.jpg"></p>
<p>低头看手机的时候，脖子过度紧张，也会带着肩膀耸起来。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/excerpt-2022-01-003.jpg"></p>
<p>人的身体由三个齿轮环环相扣，分别对应颈椎、胸椎、腰椎。长时间被动耸肩，会让胸椎的齿轮停止转动，甚至倒着转。时间久了，不仅体态难看，腰疼、肩疼、脖子疼都会找上门来。</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>现在你可以做一个测试，来看看自己的“胸椎齿轮”怎么样了。</p>
<p>坐在椅子上，挺直身体。转动上半身，用左手摸右侧屁股。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/excerpt-2022-01-001.jpg"></p>
<p>如果你的上半身很难转动，只能用肩膀或者手臂发力来摸屁股；或者转到一半的时候，后背跟腰感觉非常疼痛、僵硬，这都说明你的被动耸肩已经非常严重了，要赶紧重视起来！</p>
<p>我们可以尝试使用“直臂外旋”这一技巧来维持一个好看的形态：先将手臂完全伸直，然后向外拧转肘窝，再用力将整条手臂靠近身体。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/excerpt-2022-01-005.jpg"></p>
<p>从侧面看，你的后背因为“直臂外旋”这个动作而完全收紧，整个人非常直挺、有气质。</p>
<blockquote>
<p>深呼吸其实有差不多的效果。</p>
</blockquote>
<h2 id="锻炼"><a href="#锻炼" class="headerlink" title="锻炼"></a>锻炼</h2><h3 id="练习1-猫咪吐气弓背"><a href="#练习1-猫咪吐气弓背" class="headerlink" title="练习1 猫咪吐气弓背"></a>练习1 猫咪吐气弓背</h3><blockquote>
<p>可以网上搜 cats and dogs</p>
</blockquote>
<p>跪在瑜伽垫上，双手触地，如下图所示。吐气，并像猫一样拱起上半身，感受后背的拉伸感5～6秒，然后回到起始姿势。重复练习8～12次。</p>
<p>这里特意给各位一个吐气特写——在吐气的时候向上弓背。</p>
<h3 id="练习2-妩媚转体"><a href="#练习2-妩媚转体" class="headerlink" title="练习2 妩媚转体"></a>练习2 妩媚转体</h3><p>首先非常妩媚地侧躺在瑜伽垫上，保持手肘、肩膀在一条垂线上。转动整个上半身，视线跟着手臂一起往上看，在动作最顶端给自己点个赞。左右交替转体15～20次，可以帮你清除一天的疲劳。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/excerpt-2022-01-006.jpg"></p>
<h1 id="颈部"><a href="#颈部" class="headerlink" title="颈部"></a>颈部</h1><h2 id="护颈指南"><a href="#护颈指南" class="headerlink" title="护颈指南"></a>护颈指南</h2><p>每过1小时，就要把头从电脑或手机里面“拔”出来，来一发“社畜三联”。</p>
<h3 id="练习1-上看下看左看右看"><a href="#练习1-上看下看左看右看" class="headerlink" title="练习1 上看下看左看右看"></a>练习1 上看下看左看右看</h3><p>保持身体端正，依次向下、向上、向右、向左看，然后左偏头、右偏头，在每个方向上拉伸肌肉，并保持5秒钟。然后左转右转。</p>
<h3 id="练习2-掰头"><a href="#练习2-掰头" class="headerlink" title="练习2 掰头"></a>练习2 掰头</h3><p>端坐在椅子上，一只手放在屁股下面，用另一只手缓缓地掰头。力度不宜过大，以能感受到颈部左右两侧的肌肉被拉伸即可。</p>
<h3 id="练习3-猛男掰头"><a href="#练习3-猛男掰头" class="headerlink" title="练习3 猛男掰头"></a>练习3 猛男掰头</h3><p>端坐在椅子上，左手放到脖子后面，右手缓缓地将头向膝盖方向拉动。不要过分用力，以能感受到颈部后侧肌肉被拉伸即可。</p>
<h1 id="膝盖"><a href="#膝盖" class="headerlink" title="膝盖"></a>膝盖</h1><h2 id="诱因-1"><a href="#诱因-1" class="headerlink" title="诱因"></a>诱因</h2><p>很多人的膝关节软骨在“出厂”时的使用寿命是很充足的。但一些因素会让膝关节软骨被过早、过快地消耗殆尽。常见的可导致膝关节软骨加速磨损的因素有以下几点。</p>
<h3 id="肥胖"><a href="#肥胖" class="headerlink" title="肥胖"></a>肥胖</h3><p>体重每增加1千克，走路时，膝关节承受的重量会增加3千克；而跑步时，膝关节承受的重量会增加10千克。</p>
<h3 id="不良姿势"><a href="#不良姿势" class="headerlink" title="不良姿势"></a>不良姿势</h3><p>二郎腿，蹲在地上。</p>
<h3 id="久坐"><a href="#久坐" class="headerlink" title="久坐"></a>久坐</h3><p>久坐不动会减慢关节滑囊的营养传递速度，这会让一部分关节软骨“饿”死。</p>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>一开始，你可能会在下蹲的时候发现膝关节弹响。慢慢地，会演化成跑步后膝关节长时间不适。最后，膝关节会变得僵硬，有的甚至需要进行手术治疗。</p>
<h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p>缓慢下蹲到最深，然后像小鸭子一样，左右腿交替蹲着向前走。</p>
<p>如果在下蹲的过程中，膝关节前部有针刺一样的感觉，说明你的髌软骨可能有损伤。如果在行走的过程中膝关节突然卡住不动了，说明你的半月板可能有损伤。</p>
<p>如果能顺利完成测试，而没有什么不适感，那说明你的膝关节健康状况比较好，只要在平时做好预防工作就行了。</p>
<h2 id="保养"><a href="#保养" class="headerlink" title="保养"></a>保养</h2><h3 id="控制体重"><a href="#控制体重" class="headerlink" title="控制体重"></a>控制体重</h3><h3 id="减少久坐。"><a href="#减少久坐。" class="headerlink" title="减少久坐。"></a>减少久坐。</h3><p>每小时站起来走5分钟。这样做，不仅能让身体恢复张力，还能给膝关节软骨“供能”。</p>
<h3 id="适当运动"><a href="#适当运动" class="headerlink" title="适当运动"></a>适当运动</h3><h4 id="练习1-靠墙静蹲"><a href="#练习1-靠墙静蹲" class="headerlink" title="练习1 靠墙静蹲"></a>练习1 靠墙静蹲</h4><p>靠墙站立，双脚分开与髋同宽，膝关节不要超过脚尖。上半身贴紧墙面，小腿垂直于地面。缓慢下蹲，呈马步（见下图左），直到大腿肌肉酸胀。重复5～6次。</p>
<p>千万不要如下图右边所示那样蹲，那样不仅看起来非常社会，而且毫无训练价值。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/excerpt-2022-01-007.jpg"></p>
<h4 id="练习2-老熊蹭树"><a href="#练习2-老熊蹭树" class="headerlink" title="练习2 老熊蹭树"></a>练习2 老熊蹭树</h4><p>上半身贴紧墙面，重复下蹲8～12次。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/excerpt-2022-01-008.jpg"></p>
<h4 id="练习3-坐姿踢腿"><a href="#练习3-坐姿踢腿" class="headerlink" title="练习3 坐姿踢腿"></a>练习3 坐姿踢腿</h4><p>端坐在椅子上，保持膝盖在座椅范围外，整条腿水平绷直，用力勾脚尖，坚持30秒钟，然后放松5秒钟。重复练习。</p>
<p>千万不要像下图右边那样做，那样虽然看起来很萌，但毫无用处。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/excerpt-2022-01-009.jpg"></p>
<h4 id="练习4-坐姿夹腿"><a href="#练习4-坐姿夹腿" class="headerlink" title="练习4 坐姿夹腿"></a>练习4 坐姿夹腿</h4><p>端坐在椅子上，用双腿的膝关节夹住一个枕头（如果没有枕头，可以用手代替）。用力夹紧，保持10秒钟，然后放松。如此重复10次。</p>
<p><img src="https://gitee.com/rayywei/blog-image/raw/master/excerpt-2022-01-010.jpg"></p>
<h1 id="减肥"><a href="#减肥" class="headerlink" title="减肥"></a>减肥</h1><p>真正的减肥，是保持一种健康的生活方式。</p>
<p>先调整好饮食，再迈开腿运动，循序渐进，持之以恒。让身体适应这种状态，好身体自然属于你。</p>
<p>健康的生活方式，意味着健康的体魄、充沛的精力、从容的心态和满满的自信。而这些，比单纯的“瘦”更有价值。</p>
<h2 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h2><ol>
<li>记录每天的饮食。这样就能对自己的饮食进行管理，而不是只记得自己吃了沙拉，却忘了自己还喝了奶茶。</li>
<li>定个合理的体重控制目标。BMI在18.5～24就是正常体重了，别动不动就要低于45千克。</li>
<li>保持科学的减肥速度。以每周减0.5～1千克为宜，而不是每天减0.5千克。最好每周减掉体重的1%左右。</li>
<li>适量运动，注意休息。以提高体能为主要目标，固定时间运动，且不要天天运动。</li>
<li>进阶后，提升至高强度运动。高强度运动期间，也要配合饮食、加强营养，而不是一味地少吃。</li>
<li>放松心态，持之以恒。良好的心态是成功减肥的关键，请记住：饭要一口一口地吃，赘肉要一点一点地减。</li>
</ol>
]]></content>
      <categories>
        <category>书摘</category>
      </categories>
  </entry>
  <entry>
    <title>《艺术家们》书摘</title>
    <url>/2022/01/04/%E4%B9%A6%E6%91%98/%E3%80%8A%E8%89%BA%E6%9C%AF%E5%AE%B6%E4%BB%AC%E3%80%8B%E4%B9%A6%E6%91%98/</url>
    <content><![CDATA[<p>“迟到是他与人约会的内容之一。”</p>
<br/>

<br/>

<p>“艺术家工作的本质，是在任何地方都让美成为胜利者。”</p>
<br/>

<br/>

<p>他们只是这数百万城市里三个心怀艺术梦想的年轻人，他们的身上没有任何社会资本，没人认识他们，面对着一切都未知的未来，他们要做什么，孰轻孰重？</p>
<br/>

<br/>

<p>名人的历史清晰地记在文字中，凡人的历史只是可有可无地保存在彼此的记忆里。</p>
<br/>

<br/>

<p>作家要写作，是因为他们心里总有一些活生生的人物，难以遏制的情感，苦苦的思考，给他们压力，叫他们不写不行，不写寝食难安，他们才写。</p>
<br/>

<br/>

<p>通过交谈，去深究一个问题，或为了使自己心里某些暧昧的东西一点点明晰起来。</p>
<br/>

<br/>

<p>真正的朋友不是为你弹歌相庆，而是在人生的岔道上帮你看清去处。</p>
<br/>

<br/>

<p>这次，云天与雨霏的告别，才是人生道路上的真正的告别。他没有嫌恶她。因为他看过太多的人被生活毁灭，他要坚守的是自己的艺术观不在生活的重锤下变形。</p>
<br/>

<br/>

<p>当一个人的生活很美好、心满意足时，便隐隐会有一点忧虑，担心生出岔头，担心失去现在。这并不一定是遭人妒忌，被人算计。因为究竟生活不完全听任自己，还会陡生意外，防不胜防，有时根本无法预知和防备。</p>
<br/>

<br/>

<p>不管你的来路如何清晰，去路依然一片茫茫。没有途径，也无路标，大多数人都是从众而行。但艺术是纯粹个人心灵的事业，个人的路只是自己探索。在这野草丛生和乱石峥嵘中，你形影相吊，时而迟疑，时而焦灼，时而苦闷。如果你是一个真正的艺术家，你就永远不会满足自己，也不会放过和饶过自己。任何现世的称许与嘉奖都不算数，因为这中间夹杂着种种世俗的功利与谋划，真正认清你的意义的最终还是历史。</p>
<br/>

<br/>

<p>先锋文学更是如此。似乎谁不先锋谁就过时，谁不先锋谁就不能进入世界。不管这些想法多么幼稚，但这毕竟是对此前长期艺术禁锢的一种反叛。一条大河决堤时，谁能知道这凶猛的洪流孰益孰损，最终冲决和淹没了什么？</p>
<br/>

<br/>

<p>艺术只为了被别人注意吗？”隋意笑道，“从病理学上讲，自我戕害是神经病患者的临床表现。”</p>
<br/>

<br/>

<p>当一片狂潮铺天盖地席卷而来时，关键看你是否站得住，你是否像一块石头那样有足够的重量使自己稳如泰山，有够粗够长的根脉深深扎在自己的土地里，抓住古往今来文明的根基，否则你一准会被这洪流卷去，灭顶于其中，成为一个时代不幸的牺牲品。</p>
<br/>

<br/>

<p>人的力量只有从自己身上去寻找。</p>
<br/>

<br/>

<p>我们都不能免俗，但我们只要不把美神从自己内心的中心位置挪开就好。</p>
<br/>

<br/>

<p>人生的朋友，不一定他离开了你，你就失去了他，彼此各在天涯海角，情谊依然地久天长。可是如果他改变了，改变了信仰、追求、品质，改变了你们曾经赖以相依的共同的东西，你自然就失去了他。</p>
<p><br/><br/></p>
<p>他们没有迷失在荒原大漠里，却被金钱收买了艺术的良知。金钱太不可抗拒了，现实太残酷了，我很怕自己也沉沦下去。</p>
<br/>

<br/>
]]></content>
      <categories>
        <category>书摘</category>
      </categories>
      <tags>
        <tag>冯骥才</tag>
      </tags>
  </entry>
</search>
